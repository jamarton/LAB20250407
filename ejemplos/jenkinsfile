pipeline {
    agent any

    tools {
        maven "maven-last"
    }

    stages {
        stage('Clonar') {
            steps {
                git 'https://github.com/jmagit/demos-devops.git'
            }
        }
        stage('Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('Unit test') {
            steps {
                sh "mvn -Dmaven.test.failure.ignore=true test"
            }
            post {
                always {
                    mail to: 'team@example.com',
                         subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                         body: "Something is wrong with ${env.BUILD_URL}"
                }
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    publishHTML([
                        allowMissing: false, 
                        alwaysLinkToLastBuild: false, 
                        keepAll: false, 
                        reportDir: 'target/site/jacoco/', 
                        reportFiles: 'index.html', 
                        reportName: 'Informe de cobertura de código', 
                        reportTitles: 'Informe de cobertura de código', 
                        useWrapperFileDirectly: true
                        ])
                }
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv('SonarQubeDockerServer') {
                    sh 'mvn clean verify sonar:sonar'
                }
                timeout(2) { // time: 2 unit: 'MINUTES'
                  // In case of SonarQube failure or direct timeout exceed, stop Pipeline
                  waitForQualityGate abortPipeline: waitForQualityGate().status != 'OK'
                }
            }
        }
        stage("Build") {
            steps {
                sh "mvn package -DskipTests"
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        stage("Deploy") {
            steps {
                // mail to: 'team@example.com',
                //          subject: "Esperando confirmacion: ${currentBuild.fullDisplayName}",
                //          body: "Something is wrong with ${env.BUILD_URL}"
                // input message: 'Despliego? (Click "Proceed" to continue)'
                sh "mvn install -DskipTests"
            }
        }
        // stage("Documentacion") {
        //     steps {
        //         sh "mvn site"
        //     }
        // }
    }
}
